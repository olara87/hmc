name: Build Docker Container & Push to DO Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_django:
    uses: olara87/hmc/.github/workflows/test-django.yaml@main
  build:
    runs-on: ubuntu-latest
    needs: [test_django]
    env:
      CLUSTER_NAME: hmc
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_API_TOKEN_KEY }}
    - name: Login to DO Container Regitry with short-lived creds
      run: doctl registry login --expiry-seconds 1200
    - name: Build container image
      working-directory: ./hmc
      run: |
        docker build -f Dockerfile \
          -t registry.digitalocean.com/hmc/hmc-web:latest \
          -t registry.digitalocean.com/hmc/hmc-web:${GITHUB_SHA::7}-${GITHUB_RUN_ID::5} \
          .
    - name: Push image
      run: |
        docker push registry.digitalocean.com/hmc/hmc-web --all-tags
    - name: K8s cluster kubeconfig file with/ short-lived creds
      run: |
        doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER_NAME }}
    - name: Update deployment secrets
      run: |
        cat << EOF >> hmc/.env.prod
        SECRET_KEY=${{ secrets.SECRET_KEY }}
        LOCAL_IP=${{ secrets.LOCAL_IP }}
        LOCAL_HOST=${{ secrets.LOCAL_HOST }}
        ALLOWED_IP=${{ secrets.ALLOWED_IP }}

        SECURE_HSTS_SECONDS=${{ secrets.SECURE_HSTS_SECONDS }}
        SECURE_SSL_REDIRECT=${{ secrets.SECURE_SSL_REDIRECT }}
        SESSION_COOKIE_SECURE=${{ secrets.SESSION_COOKIE_SECURE }}
        CSRF_COOKIE_SECURE=${{ secrets.CSRF_COOKIE_SECURE }}
        SECURE_HSTS_INCLUDE_SUBDOMAINS=${{ secrets.SECURE_HSTS_INCLUDE_SUBDOMAINS }}
        SECURE_HSTS_PRELOAD=${{ secrets.SECURE_HSTS_PRELOAD }}
        
        ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}
        DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
        DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
        AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        DB_ENGINE=${{ secrets.DB_ENGINE }}
        DB_DATABASE=${{ secrets.DB_DATABASE }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_HOST=${{ secrets.DB_HOST }}
        DB_PORT=${{ secrets.DB_PORT }}
        EMAIL_HOST=${{ secrets.EMAIL_HOST }}
        EMAIL_PORT=${{ secrets.EMAIL_PORT }}
        EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
        EMAIL_HOST_COMPANY=${{ secrets.EMAIL_HOST_COMPANY }}
        COMPANY_WEBSITE=${{ secrets.COMPANY_WEBSITE }}
        EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }}
        PORTFOLIO_LINK=${{ secrets.PORTFOLIO_LINK }}
        EOF
        kubectl delete secret hmc-web-prod-env
        kubectl create secret generic hmc-web-prod-env --from-env-file=hmc/.env.prod
    - name: Update Deployment image
      run: |
        kubectl set image deployment/hmc-web-deployment hmc=registry.digitalocean.com/hmc/hmc-web:${GITHUB_SHA::7}-${GITHUB_RUN_ID::5}
    - name: Wait for rollout to finish
      run: |
        kubectl rollout status deployment/hmc-web-deployment
    - name: Post-build Django Commands - Migrate / Collectstatic
      run: |
        export SINGLE_POD_NAME=$(kubectl get pod -l app=hmc-web-deployment -o jsonpath="{.items[0].metadata.name}")
        kubectl exec -it $SINGLE_POD_NAME -- bash /app/migrate.sh
        kubectl exec -it $SINGLE_POD_NAME -- bash /app/collectstatic.sh